services:
    postgres:
        image: postgres:12.1-alpine
        container_name: shopsys-framework-postgres
        volumes:
            - postgres-data:/var/lib/postgresql/data:rw
            - ./project-base/app/docker/postgres/postgres.conf:/var/lib/postgresql/data/postgresql.conf
        environment:
            - PGDATA=/var/lib/postgresql/data/pgdata
            - POSTGRES_USER=root
            - POSTGRES_PASSWORD=root
            - POSTGRES_DB=shopsys
        command:
            - postgres
            - -c
            - config_file=/var/lib/postgresql/data/postgresql.conf
        healthcheck:
            test: ["CMD", "pg_isready"]
            start_period: 10s
            interval: 10s
            timeout: 10s
            retries: 15

    webserver:
        image: nginx:1.27-alpine
        container_name: shopsys-framework-webserver
        depends_on:
            - php-fpm
            - storefront
        volumes:
            - web-volume:/var/www/html/project-base/app/web
            - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
        ports:
            - "8000:8080"

    storefront:
        image: storefront-image
        container_name: shopsys-framework-storefront
        ports:
            - "3000:3000"

    php-fpm:
        image: php-fpm-image
        container_name: shopsys-framework-php-fpm
        volumes:
            - web-volume:/var/www/html/project-base/app/web

    php-consumer:
        restart: always
        image: php-fpm-image
        container_name: shopsys-framework-php-consumer
        volumes:
            - web-volume:/var/www/html/project-base/app/web
        depends_on:
            - php-fpm
            - rabbitmq
        entrypoint:
            - /bin/sh
            - -c
            - sleep 5 && project-base/app/docker/php-fpm/consumer-entrypoint.sh 600

    rabbitmq:
        image: rabbitmq:3.12-management-alpine
        container_name: shopsys-framework-rabbitmq

    redis:
        image: redis:5.0-alpine
        container_name: shopsys-framework-redis

    elasticsearch:
        image: elasticsearch-image
        container_name: shopsys-framework-elasticsearch
        privileged: false
        ulimits:
            nofile:
                soft: 65536
                hard: 65536
        ports:
            - "9200:9200"
        environment:
            - discovery.type=single-node
            - "ES_JAVA_OPTS=-Xms512m -Xmx1024m"

    cypress:
        build:
            context: ./project-base/storefront/cypress
            dockerfile: ./docker/Dockerfile
        container_name: shopsys-framework-cypress
        profiles:
            - storefront-acceptance-tests
        environment:
            - GROUP=${GROUP}
        volumes:
            - ./videos:/app/videos
            - ./screenshots:/app/screenshots
            - ./snapshotDiffs:/app/snapshotDiffs
        network_mode: "host"

    cypress-regenerate:
        build:
            context: ./project-base/storefront/cypress
            dockerfile: ./docker/Dockerfile
        container_name: shopsys-framework-cypress
        profiles:
            - storefront-acceptance-tests
        volumes:
            - ./snapshots:/app/snapshots
        network_mode: "host"
        environment:
            - TYPE=base
            - COMMAND=run
            - GROUP=${GROUP}

    img-proxy:
        image: darthsim/imgproxy:latest
        container_name: shopsys-framework-img-proxy
        ports:
            - "8060:8080"

volumes:
    web-volume:
    postgres-data:
        driver_opts:
            type: tmpfs
            device: tmpfs
