services:
    postgres:
        image: postgres:12.1-alpine
        container_name: shopsys-framework-postgres
        volumes:
            - ./project-base/app/docker/postgres/postgres.conf:/var/lib/postgresql/data/postgresql.conf
        environment:
            - PGDATA=/var/lib/postgresql/data/pgdata
            - POSTGRES_USER=root
            - POSTGRES_PASSWORD=root
            - POSTGRES_DB=shopsys
        command:
            - postgres
            - -c
            - config_file=/var/lib/postgresql/data/postgresql.conf

    webserver:
        image: nginx:1.27-alpine
        container_name: shopsys-framework-webserver
        depends_on:
            - php-fpm
            - storefront
        volumes:
            - web-data:/var/www/html/project-base/app/web
            - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
        ports:
            - "8000:8080"

    storefront:
        restart: always
        image: storefront-image
        container_name: shopsys-framework-storefront
        command:
            - dev
        ports:
            - "3000:3000"
        healthcheck:
            test: wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1
            start_period: 30s
            interval: 30s
            timeout: 10s
            retries: 5
        volumes:
            - ./project-base/storefront:/home/node/app

    php-fpm:
        image: php-fpm-image
        container_name: shopsys-framework-php-fpm
        environment:
            - MESSENGER_TRANSPORT_DSN=in-memory://
        volumes:
            - web-data:/var/www/html/project-base/app/web
        ports:
            - "35729:35729"

    redis:
        image: redis:7.0-alpine
        container_name: shopsys-framework-redis

    selenium-server:
        image: seleniarm/standalone-firefox:4.9.0
        container_name: shopsys-framework-acceptance-tests
        ports:
            - "4400:4444"
        environment:
            - HUB_PORT_4444_TCP_ADDR=hub
            - HUB_PORT_4444_TCP_PORT=4444
        shm_size: '2GB'

    elasticsearch:
        image: elasticsearch-image
        container_name: shopsys-framework-elasticsearch
        ulimits:
            nofile:
                soft: 65536
                hard: 65536
        ports:
            - "9200:9200"
        environment:
            - discovery.type=single-node

    img-proxy:
        image: darthsim/imgproxy:latest
        container_name: shopsys-framework-img-proxy
        ports:
            - "8060:8080"

volumes:
    web-data:
        driver: local
