services:
    postgres:
        restart: always
        image: postgres:12.1-alpine
        volumes:
            - postgres-conf:/var/lib/postgresql/conf
        environment:
            - POSTGRES_USER=root
            - POSTGRES_PASSWORD=root
            - POSTGRES_DB=shopsys
        command:
            - postgres
            - -c
            - config_file=/var/lib/postgresql/conf/postgres.conf
        networks:
            - default
        labels:
            - traefik.enable=false
        healthcheck:
            test: ["CMD", "pg_isready"]
            start_period: 10s
            interval: 10s
            timeout: 10s
            retries: 15

    webserver:
        restart: always
        image: nginx:1.13-alpine
        depends_on:
            - php-fpm
        volumes:
            - web-volume:/var/www/html/project-base/app/web
            - nginx-conf:/etc/nginx/conf.d/
        labels:
            - traefik.backend=${BRANCH_NAME_ESCAPED}
            - traefik.http.routers.${BRANCH_NAME_ESCAPED}.rule=Host(TRAEFIK_HOSTS)
            - traefik.http.routers.${BRANCH_NAME_ESCAPED}.entrypoints=http,https
            - traefik.http.routers.${BRANCH_NAME_ESCAPED}.tls.certresolver=letsencrypt
            - traefik.http.services.${BRANCH_NAME_ESCAPED}.loadbalancer.server.port=8080
            - traefik.docker.network=github-runner_traefik-network
            - traefik.enable=true
        networks:
            - default
            - github-runner_traefik-network

    php-fpm:
        restart: always
        image: php-fpm-image
        volumes:
            - web-volume:/var/www/html/project-base/app/web
            - nginx-conf:/var/www/html/docker/nginx
            - postgres-conf:/var/www/html/project-base/app/docker/postgres
        depends_on:
            - postgres
        environment:
            IGNORE_DEFAULT_ADMIN_PASSWORD_CHECK: 1
            FORCE_ELASTIC_LIMITS: true
            GOPAY_EN_GOID: "${GOPAY_GOID}"
            GOPAY_EN_CLIENTID: "${GOPAY_CLIENTID}"
            GOPAY_EN_CLIENTSECRET: "${GOPAY_CLIENTSECRET}"
            GOPAY_CS_GOID: "${GOPAY_GOID}"
            GOPAY_CS_CLIENTID: "${GOPAY_CLIENTID}"
            GOPAY_CS_CLIENTSECRET: "${GOPAY_CLIENTSECRET}"
            PACKETERY_API_KEY: "${PACKETERY_API_KEY_VALUE}"
            PACKETERY_API_PASSWORD: "${PACKETERY_API_PASSWORD_VALUE}"
            FACEBOOK_CLIENT_ID: "${FACEBOOK_CLIENTID}"
            FACEBOOK_CLIENT_SECRET: "${FACEBOOK_CLIENTSECRET}"
            GOOGLE_CLIENT_ID: "${GOOGLE_CLIENTID}"
            GOOGLE_CLIENT_SECRET: "${GOOGLE_CLIENTSECRET}"
            SEZNAM_CLIENT_ID: "${SEZNAM_CLIENTID}"
            SEZNAM_CLIENT_SECRET: "${SEZNAM_CLIENTSECRET}"
        networks:
            - default
        labels:
            - traefik.enable=false
            - chadburn.enabled=true
            - chadburn.job-exec.${BRANCH_NAME_ESCAPED}-cron-services.schedule=@every 5m
            - chadburn.job-exec.${BRANCH_NAME_ESCAPED}-cron-services.command=php phing cron-service
            - chadburn.job-exec.${BRANCH_NAME_ESCAPED}-cron-services.no-overlap=true
            - chadburn.job-exec.${BRANCH_NAME_ESCAPED}-cron-services.user=www-data
            - chadburn.job-exec.${BRANCH_NAME_ESCAPED}-cron-services.tty=true
            - chadburn.job-exec.${BRANCH_NAME_ESCAPED}-cron-export.schedule=@every 5m
            - chadburn.job-exec.${BRANCH_NAME_ESCAPED}-cron-export.command=php phing cron-export
            - chadburn.job-exec.${BRANCH_NAME_ESCAPED}-cron-export.no-overlap=true
            - chadburn.job-exec.${BRANCH_NAME_ESCAPED}-cron-export.user=www-data
            - chadburn.job-exec.${BRANCH_NAME_ESCAPED}-cron-export.tty=true
            - chadburn.job-exec.${BRANCH_NAME_ESCAPED}-cron-products.schedule=@every 5m
            - chadburn.job-exec.${BRANCH_NAME_ESCAPED}-cron-products.command=php phing cron-products
            - chadburn.job-exec.${BRANCH_NAME_ESCAPED}-cron-products.no-overlap=true
            - chadburn.job-exec.${BRANCH_NAME_ESCAPED}-cron-products.user=www-data
            - chadburn.job-exec.${BRANCH_NAME_ESCAPED}-cron-products.tty=true
            - chadburn.job-exec.${BRANCH_NAME_ESCAPED}-cron-gopay.schedule=@every 5m
            - chadburn.job-exec.${BRANCH_NAME_ESCAPED}-cron-gopay.command=php phing cron-gopay
            - chadburn.job-exec.${BRANCH_NAME_ESCAPED}-cron-gopay.no-overlap=true
            - chadburn.job-exec.${BRANCH_NAME_ESCAPED}-cron-gopay.user=www-data
            - chadburn.job-exec.${BRANCH_NAME_ESCAPED}-cron-gopay.tty=true
            - chadburn.job-exec.${BRANCH_NAME_ESCAPED}-cron-dataBridgeImport.schedule=@every 5m
            - chadburn.job-exec.${BRANCH_NAME_ESCAPED}-cron-dataBridgeImport.command=php phing cron-data-bridge-import
            - chadburn.job-exec.${BRANCH_NAME_ESCAPED}-cron-dataBridgeImport.no-overlap=true
            - chadburn.job-exec.${BRANCH_NAME_ESCAPED}-cron-dataBridgeImport.user=www-data
            - chadburn.job-exec.${BRANCH_NAME_ESCAPED}-cron-dataBridgeImport.tty=true
            - chadburn.job-exec.${BRANCH_NAME_ESCAPED}-cron-packetery.schedule=@every 5m
            - chadburn.job-exec.${BRANCH_NAME_ESCAPED}-cron-packetery.command=php phing cron-packetery
            - chadburn.job-exec.${BRANCH_NAME_ESCAPED}-cron-packetery.no-overlap=true
            - chadburn.job-exec.${BRANCH_NAME_ESCAPED}-cron-packetery.user=www-data
            - chadburn.job-exec.${BRANCH_NAME_ESCAPED}-cron-packetery.tty=true

    php-consumer:
        restart: always
        image: php-fpm-image
        volumes:
            - web-volume:/var/www/html/project-base/app/web
        depends_on:
            - php-fpm
            - rabbitmq
        environment:
            IGNORE_DEFAULT_ADMIN_PASSWORD_CHECK: 1
            FORCE_ELASTIC_LIMITS: true
            GOPAY_EN_GOID: "${GOPAY_GOID}"
            GOPAY_EN_CLIENTID: "${GOPAY_CLIENTID}"
            GOPAY_EN_CLIENTSECRET: "${GOPAY_CLIENTSECRET}"
            GOPAY_CS_GOID: "${GOPAY_GOID}"
            GOPAY_CS_CLIENTID: "${GOPAY_CLIENTID}"
            GOPAY_CS_CLIENTSECRET: "${GOPAY_CLIENTSECRET}"
            PACKETERY_API_KEY: "${PACKETERY_API_KEY_VALUE}"
            PACKETERY_API_PASSWORD: "${PACKETERY_API_PASSWORD_VALUE}"
            FACEBOOK_CLIENT_ID: "${FACEBOOK_CLIENTID}"
            FACEBOOK_CLIENT_SECRET: "${FACEBOOK_CLIENTSECRET}"
            GOOGLE_CLIENT_ID: "${GOOGLE_CLIENTID}"
            GOOGLE_CLIENT_SECRET: "${GOOGLE_CLIENTSECRET}"
            SEZNAM_CLIENT_ID: "${SEZNAM_CLIENTID}"
            SEZNAM_CLIENT_SECRET: "${SEZNAM_CLIENTSECRET}"
        networks:
            - default
        entrypoint:
            - /bin/sh
            - -c
            - sleep 5 && project-base/app/docker/php-fpm/consumer-entrypoint.sh 600
        labels:
            - traefik.enable=false

    rabbitmq:
        image: rabbitmq:3.12-management-alpine
        ports:
            - "15672:15672"

    storefront:
        restart: always
        image: storefront-image
        networks:
            - default
        labels:
            - traefik.enable=false
        environment:
            PACKETERY_API_KEY: "${PACKETERY_API_KEY_VALUE}"
            GOOGLE_MAP_API_KEY: "${GOOGLE_MAP_API_KEY_VALUE}"

    redis:
        image: redis:7.0-alpine
        networks:
            - default
        labels:
            - traefik.enable=false

    smtp-server:
        image: namshi/smtp:latest
        networks:
            - default
        labels:
            - traefik.enable=false

    elasticsearch:
        image: elasticsearch-image
        ulimits:
            nofile:
                soft: 65536
                hard: 65536
        environment:
            - discovery.type=single-node
        networks:
            - default
        labels:
            - traefik.enable=false

    img-proxy:
        image: darthsim/imgproxy:latest

volumes:
    web-volume:
    nginx-conf:
    postgres-conf:

networks:
    github-runner_traefik-network:
        external: true
    default:
