services:
    _defaults:
        autowire: true
        autoconfigure: true
        public: false

    Shopsys\FrontendApiBundle\:
        resource: '../../**/*{Facade,Factory,Mapper,Mutation,Repository,Resolver,Validator}.php'

    resolverMaps:
        namespace: Shopsys\FrontendApiBundle\
        resource: '../../**/*{Map}.php'
        tags:
            - { name: overblog_graphql.resolver_map, schema: default }

    Shopsys\FrontendApiBundle\Controller\FrontendApiController:
        tags: ['controller.service_arguments']

    Shopsys\FrontendApiBundle\Component\Domain\EnabledOnDomainChecker:
        arguments:
            $enabledDomainIds: '%shopsys.frontend_api.domains%'

    Shopsys\FrontendApiBundle\Model\Error\ErrorHandlerListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception, method: onKernelException, priority: 20}

    Shopsys\FrontendApiBundle\Model\Token\TokenAuthenticator:  ~

    Shopsys\FrontendApiBundle\Model\User\FrontendApiUserProvider: ~

    Shopsys\FrontendApiBundle\Model\User\FrontendApiUserFactory: ~

    Shopsys\FrontendApiBundle\Model\User\FrontendApiUserFactoryInterface:
        alias: Shopsys\FrontendApiBundle\Model\User\FrontendApiUserFactory

    Shopsys\FrontendApiBundle\Model\GraphqlConfigurator: ~

    Shopsys\FrontendApiBundle\Model\Product\Filter\ProductFilterNormalizer: ~

    Lcobucci\JWT\Configuration:
        factory: ['@Shopsys\FrontendApiBundle\Model\Token\JwtConfigurationFactory', create]

    Shopsys\FrontendApiBundle\Component\HttpFoundation\TransactionalMasterRequestListener:
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }
            - { name: kernel.event_listener, event: kernel.response, method: onKernelResponse }
            - { name: kernel.event_listener, event: kernel.exception, method: onKernelException }
            - { name: kernel.event_listener, event: graphql.post_executor, method: afterGraphQlExecution }

