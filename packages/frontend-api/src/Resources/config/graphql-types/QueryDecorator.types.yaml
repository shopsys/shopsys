QueryDecorator:
    type: object
    decorator: true
    config:
        fields:
            categories:
                type: '[Category!]!'
                resolve: "@=query('categories')"
                description: "Returns complete list of categories"
            categoriesSearch:
                type: "CategoryConnection"
                argsBuilder: "Relay::Connection"
                resolve: "@=query('categoriesSearch', args)"
                args:
                    search:
                        type: "String!"
                description: "Returns list of searched categories that can be paginated using `first`, `last`, `before` and `after` keywords"
            products:
                type: "ProductConnection"
                argsBuilder:
                    builder: "PaginatorArgumentsBuilder"
                    config:
                        orderingModeType: 'ProductOrderingModeEnum'
                resolve: "@=query('products', args)"
                description: "Returns list of ordered products that can be paginated using `first`, `last`, `before` and `after` keywords"
            product:
                type: 'Product'
                resolve: "@=query('productDetail', args['uuid'], args['urlSlug'])"
                args:
                    uuid:
                        type: "Uuid"
                    urlSlug:
                        type: "String"
                description: "Returns product filtered using UUID or URL slug"
            RegularProduct:
                type: 'RegularProduct'
            MainVariant:
                type: 'MainVariant'
            Variant:
                type: 'Variant'
            category:
                type: 'Category'
                resolve: "@=query('categoryByUuidOrUrlSlug', args['uuid'], args['urlSlug'])"
                args:
                    uuid:
                        type: "Uuid"
                    urlSlug:
                        type: "String"
                description: "Returns category filtered using UUID or URL slug"
            payments:
                type: '[Payment!]!'
                resolve: "@=query('payments')"
                description: "Returns complete list of payment methods"
            payment:
                type: 'Payment'
                resolve: "@=query('payment', args['uuid'])"
                args:
                    uuid:
                        type: "Uuid!"
                description: "Returns payment filtered using UUID"
            transports:
                type: '[Transport!]!'
                resolve: "@=query('transports')"
                description: "Returns complete list of transport methods"
            transport:
                type: 'Transport'
                resolve: "@=query('transport', args['uuid'])"
                args:
                    uuid:
                        type: "Uuid!"
                description: "Returns complete list of transport methods"
            currentCustomerUser:
                type: 'CurrentCustomerUser!'
                resolve: "@=query('currentCustomerUser')"
                description: "Returns currently logged in customer user"
            orders:
                type: "OrderConnection"
                argsBuilder: "Relay::Connection"
                resolve: "@=query('orders', args)"
                description: "Returns list of orders that can be paginated using `first`, `last`, `before` and `after` keywords"
            order:
                type: 'Order'
                resolve: "@=query('order', args['uuid'], args['urlHash'])"
                args:
                    uuid:
                        type: "Uuid"
                    urlHash:
                        type: "String"
                description: "Returns order filtered using UUID or urlHash"
            articles:
                type: "ArticleConnection"
                argsBuilder: "Relay::Connection"
                resolve: "@=query('articles', args, args['placement'])"
                args:
                    placement:
                        type: "String"
                description: "Returns list of articles that can be paginated using `first`, `last`, `before` and `after` keywords and filtered by `placement`"
            article:
                type: 'Article'
                resolve: "@=query('article', args['uuid'], args['urlSlug'])"
                args:
                    uuid:
                        type: "Uuid"
                    urlSlug:
                        type: "String"
                description: "Returns article filtered using UUID or URL slug"
            termsAndConditionsArticle:
                type: 'Article'
                resolve: "@=query('termsAndConditionsArticle')"
                description: "Returns Terms and Conditions article"
            privacyPolicyArticle:
                type: 'Article'
                resolve: "@=query('privacyPolicyArticle')"
                description: "Returns privacy policy article"
            cookiesArticle:
                type: 'Article'
                resolve: "@=query('cookiesArticle')"
                description: "Returns information about cookies article"
            brands:
                type: '[Brand!]!'
                resolve: "@=query('brands')"
                description: "Returns complete list of brands"
            brand:
                type: 'Brand'
                resolve: "@=query('brand', args['uuid'], args['urlSlug'])"
                args:
                    uuid:
                        type: "Uuid"
                    urlSlug:
                        type: "String"
                description: "Returns brand filtered using UUID or URL slug"
            promotedProducts:
                type: '[Product!]!'
                resolve: "@=query('promotedProducts')"
                description: "Returns promoted products"
            adverts:
                type: '[Advert!]!'
                resolve: "@=query('adverts', args['positionName'])"
                args:
                    positionName:
                        type: "String"
                description: "Returns list of adverts, optionally filtered by `positionName`"
            AdvertCode:
                type: 'AdvertCode'
            AdvertImage:
                type: 'AdvertImage'
            advertPositions:
                type: '[AdvertPosition!]!'
                resolve: "@=query('advertPositions')"
                description: "Returns list of advert positions."
