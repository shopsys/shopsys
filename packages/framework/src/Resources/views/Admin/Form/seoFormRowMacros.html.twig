{% macro row(form, label, recommendedLength = null, cssClass = '') %}
    {% if recommendedLength is not null %}
        {% set cssClass = cssClass ~ ' js-characters-counter-input' %}
    {% endif %}

    <div class="form-line">
        <strong class="form-line__label">
            {{ form_label(form, label) }}
        </strong>

        <div class="form-line__side js-characters-counter">
            <div class="form-line__item form-line__item--left">
                <div class="input__wrap">
                    {% set attr = form.vars.attr|merge({class: form.vars.attr.class|default('') ~ ' ' ~ cssClass}) %}
                    {{ form_widget(form, {attr: attr}) }}
                </div>
            </div>

            {% if recommendedLength is not null %}
                <div class="form-line__count">
                    <div class="form-line__count__desc js-characters-counter-info" data-recommended-length="{{ recommendedLength }}"></div>
                </div>
            {% endif %}
            {{ form_errors(form) }}
        </div>
    </div>
{% endmacro %}

{% macro multidomainRow(multidomainForm, label, recommendedLength = null, cssClass = '') %}
    {% if isMultidomain() %}
        {% set cssClass = cssClass ~ ' input--domain' %}
    {% endif %}
    {% if recommendedLength is not null %}
        {% set cssClass = cssClass ~ ' js-characters-counter-input' %}
    {% endif %}

    <div class="form-line">
        <strong class="form-line__label">
            {{ label }}:
        </strong>
        {% for domainId, domainForm in multidomainForm %}
            <div class="form-line__side {% if not loop.first %}margin-top-5{% endif %} js-characters-counter">
                <div class="form-line__item form-line__item--left">
                    <div class="input__wrap">
                        {% set attr = domainForm.vars.attr|merge({class: cssClass ~ ' ' ~ domainForm.vars.attr.class|default('') }) %}

                        {{ form_widget(domainForm, {
                            multidomain: true,
                            domainId: domainId,
                            attr: attr
                        }) }}
                        {% if isMultidomain() %}
                            <span class="input__domain">
                                {{ domainIcon(domainId) }}
                            </span>
                        {% endif %}
                    </div>
                </div>

                {% if recommendedLength is not null %}
                    <div class="form-line__count">
                        <span class="form-line__count__desc js-characters-counter-info" data-recommended-length="{{ recommendedLength }}"></span>
                    </div>
                {% endif %}
                {{ form_errors(domainForm) }}
            </div>
        {% endfor %}
    </div>
{% endmacro %}